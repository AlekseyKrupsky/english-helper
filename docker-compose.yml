version: '3.9'

services:

  php-nginx:
    build:
      dockerfile: ./docker/php-nginx/Dockerfile
      context: .
#    depends_on:
#      - database
    environment:
      - WEB_DOCUMENT_ROOT=/app/public
      - WEB_ALIAS_DOMAIN=english-helper.local
      - PHP_MEMORY_LIMIT=2048M
      - PHP_MAX_EXECUTION_TIME=-1
#      - XDEBUG_MODE=debug
#      - XDEBUG_START_WITH_REQUEST=yes
#      - XDEBUG_CLIENT_PORT=9000
    ports:
      - ${NGINX_PORT:-8080}:80
    env_file:
      - .env
    volumes:
      - ./app/:/app/
      - .env:/app/.env
#      - vendor:/app/vendor
#    networks:
#      - workforce


#  wordpress:
#    build:
#      context: .
#      dockerfile: docker/wordpress/Dockerfile
#    restart: on-failure
#    env_file:
#      - .env
#    volumes:
#      - wordpress:/var/www/html
#      - ./app/wp-content:/var/www/html/wp-content
#      - ./app/wp-config.php:/var/www/html/wp-config.php:ro
#      - ./docker/wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
#      - ./app/composer.json:/var/www/html/composer.json:ro
#      - ./app/composer.lock:/var/www/html/composer.lock
#      - ./docker/wordpress/pdf-fonts:/var/www/html/pdf-fonts:ro
#      - vendor:/var/www/html/vendor
#    depends_on:
#      - db
#    networks:
#      - wordpress

#  db:
#    image: mysql:5.7
#    restart: on-failure
#    ports:
#      - ${LOCAL_DB_PORT:-3308}:3306
#    env_file:
#      - .env
#    environment:
#      MYSQL_DATABASE: ${DB_NAME}
#      MYSQL_USER: ${DB_USER}
#      MYSQL_PASSWORD: ${DB_PASSWORD}
#      MYSQL_RANDOM_ROOT_PASSWORD: '1'
#    volumes:
#      - ./data/mysql:/var/lib/mysql
#    networks:
#      - wordpress

#  nginx:
#    image: nginx
#    restart: on-failure
#    ports:
#      - ${LOCAL_SITE_PORT:-8080}:80
#    env_file:
#      - .env
#    networks:
#      - wordpress
#    depends_on:
#      - wordpress
#    volumes:
#      - wordpress:/var/www/html
#      - ./data/nginx/logs:/var/log/nginx
#      - ./app/wp-content:/var/www/html/wp-content
#      - ./app/wp-config.php:/var/www/html/wp-config.php:ro
#      - ./docker/dev/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

#  frontend:
#    build:
#      context: .
#      dockerfile: docker/dev/frontend/Dockerfile
#    restart: on-failure
#    volumes:
#      - ./layout/scss:/layout/scss
#      - ./app/wp-content/themes/gpp-theme/style.css:/layout/css/main.css

#  minio:
#    image: quay.io/minio/minio:latest
#    restart: on-failure
#    command: server /data --console-address ":${MINIO_WEB_UI_PORT-9001}"
#    environment:
#      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
#      - MINIO_ROOT_PASSWORD=${AWS_SECRET_KEY}
#    ports:
#      - ${MINIO_API_PORT-9000}:${MINIO_API_PORT-9000}
#      - ${MINIO_WEB_UI_PORT-9001}:${MINIO_WEB_UI_PORT-9001}
#    networks:
#      - wordpress
#    volumes:
#      - /data/minio:/data

#  mailhog:
#    image: mailhog/mailhog:latest
#    ports:
#      - 127.0.0.1:8025:8025
#    networks:
#      - wordpress

#networks:
#  wordpress:
#    driver: bridge

volumes:
  vendor:
#  wordpress:
#    driver: local
